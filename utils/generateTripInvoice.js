const fs = require("fs");
const path = require("path");
const PDFDocument = require("pdfkit");
const QRCode = require("qrcode");

const generateTripInvoice = async (
  reservation,
  trip,
  user,
  streamTo = null
) => {
  return new Promise(async (resolve, reject) => {
    const invoiceDir = path.join(__dirname, "../invoices");
    if (!fs.existsSync(invoiceDir))
      fs.mkdirSync(invoiceDir, { recursive: true });

    const filePath = path.join(
      invoiceDir,
      `trip-invoice-${reservation._id}.pdf`
    );
    const qrPath = path.join(invoiceDir, `qr-${reservation._id}.png`);
    const doc = new PDFDocument({ size: "A4", margin: 50 });

    if (streamTo) {
      doc.pipe(streamTo);
    } else {
      const stream = fs.createWriteStream(filePath);
      doc.pipe(stream);
      stream.on("finish", () => {
        resolve(filePath);
        fs.unlink(qrPath, () => {});
      });
      stream.on("error", reject);
    }

    const logoPath = path.join(__dirname, "../assets/banglabnb-logo2.png");
    const banglaFontPath = path.join(
      __dirname,
      "../fonts/NotoSansBengali-VariableFont_wdth,wght.ttf"
    );
    if (fs.existsSync(banglaFontPath))
      doc.registerFont("Bangla", banglaFontPath);

    // Header
    doc.rect(0, 0, doc.page.width, 100).fill("#34495e");
    if (fs.existsSync(logoPath)) {
      doc.image(logoPath, 460, 20, { fit: [70, 50] });
    }
    doc
      .font("Helvetica")
      .fontSize(10)
      .fillColor("white")
      .text("BanglaBnB", 460, 75, {
        width: 70,
        align: "center",
      });

    doc
      .fontSize(14)
      .fillColor("#d21034")
      .text("📄 Trip Invoice", { align: "right", width: 500 });
    doc.moveTo(50, 110).lineTo(550, 110).stroke();

    // Booking details
    const subtotal =
      reservation.subtotal ||
      reservation.farePerSeat * reservation.numberOfSeats;
    const serviceFee = reservation.serviceFee || subtotal * 0.1;
    const vat = reservation.vat || (subtotal + serviceFee) * 0.075;
    const total = reservation.totalAmount || subtotal + serviceFee + vat;

    const formatCurrency = (v) =>
      `BDT${Number(v || 0).toLocaleString("en-BD", {
        minimumFractionDigits: 2,
        maximumFractionDigits: 2,
      })}`;

    doc.rect(50, 120, 500, 100).fill("#f8f8f8").stroke();
    doc.fillColor("black").font("Helvetica").fontSize(11);
    doc.text(`Reservation ID: ${reservation._id}`, 60, 130);
    doc.text(`Passenger: ${user.name} (${user.email})`);
    doc.text(`Route: ${trip.from} → ${trip.to}`);
    doc.text(`Date: ${trip.date}`);
    doc.text(`Time: ${trip.time}`);
    doc.text(`Status: ${reservation.status}`);

    // Bangla
    doc.moveDown();
    doc.font("Bangla").fontSize(11).fillColor("#333");
    doc.text(`যাত্রী: ${user.name}`);
    doc.text(`মেইল: ${user.email}`);
    doc.text(`রুট: ${trip.from} → ${trip.to}`);
    doc.text(`তারিখ: ${trip.date}`);
    doc.text(`সময়: ${trip.time}`);

    // Payment Summary
    doc
      .moveDown()
      .font("Helvetica-Bold")
      .fontSize(13)
      .fillColor("black")
      .text(" Payment Summary", { underline: true });
    doc.moveDown(0.5).font("Helvetica").fontSize(12);

    const left = 60;
    const width = 500 - left;
    const summaryLines = [
      [
        `Fare (BDT ${reservation.farePerSeat} x ${reservation.numberOfSeats} seats):`,
        formatCurrency(subtotal),
      ],
      ["Service Fee (10%):", formatCurrency(serviceFee)],
      ["VAT (7.5%):", formatCurrency(vat)],
      ["Total Paid:", formatCurrency(total)],
    ];

    summaryLines.forEach(([label, value]) => {
      const isTotal = label.includes("Total");
      const currentY = doc.y;
      doc
        .font(isTotal ? "Helvetica-Bold" : "Helvetica")
        .text(label, left, currentY);
      doc.text(value, left, currentY, { align: "right", width });
      doc.moveDown(0.8);
    });

    // QR
    await QRCode.toFile(
      qrPath,
      `https://banglabnb.com/my-rides?reservation=${reservation._id}`,
      { width: 100 }
    );
    doc.image(qrPath, 450, doc.y - 30, { width: 80 });

    // Signatures
    doc.moveDown(6).fontSize(12).fillColor("black");
    const signatureY = doc.y;
    doc.text("__________________________", left, signatureY);
    doc.text("Passenger Signature", left, signatureY + 15);
    doc.text("__________________________", 350, signatureY);
    doc.text("Authorized Signature", 350, signatureY + 15);

    // Footer
    doc.rect(0, 760, doc.page.width, 40).fill("#f0f0f0");
    doc
      .fillColor("gray")
      .fontSize(10)
      .text("This invoice was generated by BanglaBnB", 50, 775, {
        align: "center",
      });

    doc.end();
    if (streamTo) {
      fs.unlink(qrPath, () => {});
      resolve();
    }
  });
};

module.exports = generateTripInvoice;
